name: Publish to VS Code Marketplace

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - 'release'
          - 'pre-release'
        default: 'release'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version
        run: |
          echo "Updating version to ${{ github.event.inputs.version }}"
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build project
        run: npm run build

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Package extension
        run: |
          if [ "${{ github.event.inputs.release_type }}" = "pre-release" ]; then
            vsce package --pre-release
          else
            vsce package
          fi

      - name: Publish to VS Code Marketplace
        run: |
          if [ "${{ github.event.inputs.release_type }}" = "pre-release" ]; then
            vsce publish --pre-release -p "$VSCE_TOKEN"
          else
            vsce publish -p "$VSCE_TOKEN"
          fi
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}

      - name: Create Git Tag (for releases only)
        if: github.event.inputs.release_type == 'release'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Create GitHub Release (for releases only)
        if: github.event.inputs.release_type == 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          files: "*.vsix"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: commit-assistant-${{ github.event.inputs.release_type }}-${{ github.event.inputs.version }}
          path: "*.vsix"
          retention-days: 90
